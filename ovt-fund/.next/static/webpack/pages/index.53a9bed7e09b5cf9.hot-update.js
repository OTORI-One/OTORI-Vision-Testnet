"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/hooks/useOVTClient.ts":
/*!***********************************!*\
  !*** ./src/hooks/useOVTClient.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useOVTClient: function() { return /* binding */ useOVTClient; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_archClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/archClient */ \"./src/lib/archClient.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\n// Initialize the Arch client\nconst archClient = new _lib_archClient__WEBPACK_IMPORTED_MODULE_1__.ArchClient({\n    programId: process.env.NEXT_PUBLIC_PROGRAM_ID || \"\",\n    treasuryAddress: process.env.NEXT_PUBLIC_TREASURY_ADDRESS || \"\",\n    endpoint: process.env.NEXT_PUBLIC_ARCH_ENDPOINT || \"http://localhost:8000\"\n});\n// Mock initial portfolio data\nconst INITIAL_PORTFOLIO_ITEMS = [\n    {\n        name: \"Polymorphic Labs\",\n        value: 200000,\n        current: 1040000,\n        change: 420,\n        description: \"Encryption Layer\"\n    },\n    {\n        name: \"VoltFi\",\n        value: 150000,\n        current: 525000,\n        change: 250,\n        description: \"Bitcoin Volatility Index on Bitcoin\"\n    },\n    {\n        name: \"MIXDTape\",\n        value: 100000,\n        current: 250000,\n        change: 150,\n        description: \"Phygital Music for superfans - disrupting Streaming\"\n    }\n];\n// Simulate portfolio value changes\nfunction simulatePortfolioChange(items) {\n    return items.map((item)=>({\n            ...item,\n            current: item.current * (1 + (Math.random() * 0.02 - 0.01)),\n            change: Number(((item.current / item.value - 1) * 100).toFixed(1))\n        }));\n}\nfunction useOVTClient() {\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [navData, setNavData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        totalValue: \"$1.815M\",\n        changePercentage: \"+302%\",\n        portfolioItems: INITIAL_PORTFOLIO_ITEMS\n    });\n    // Fetch NAV data periodically\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchNAV = async ()=>{\n            try {\n                const nav = await archClient.getCurrentNAV();\n                const totalValue = nav.value;\n                const averageChange = nav.portfolioItems.reduce((sum, item)=>sum + item.change, 0) / nav.portfolioItems.length;\n                setNavData({\n                    totalValue: \"$\".concat((totalValue / 1000000).toFixed(3), \"M\"),\n                    changePercentage: \"\".concat(averageChange >= 0 ? \"+\" : \"\").concat(averageChange.toFixed(1), \"%\"),\n                    portfolioItems: nav.portfolioItems.map((item)=>({\n                            name: item.name,\n                            value: item.value,\n                            current: item.value * (1 + item.change / 100),\n                            change: item.change,\n                            description: getProjectDescription(item.name)\n                        }))\n                });\n            } catch (err) {\n                console.error(\"Failed to fetch NAV:\", err);\n            }\n        };\n        fetchNAV(); // Initial fetch\n        const interval = setInterval(fetchNAV, 30000); // Update every 30 seconds\n        return ()=>clearInterval(interval);\n    }, []);\n    const buyOVT = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (amount)=>{\n        setIsLoading(true);\n        setError(null);\n        try {\n            // In a real implementation, we would:\n            // 1. Get the connected wallet address\n            // 2. Wait for the Bitcoin payment transaction\n            // 3. Use the payment txid to verify and complete the purchase\n            const mockPaymentTxid = \"mock_txid_\" + Date.now();\n            const result = await archClient.buyOVT(amount, mockPaymentTxid, \"mock_wallet_address\");\n            if (!result.success) {\n                throw new Error(result.error || \"Failed to buy OVT\");\n            }\n            // Refresh NAV data after successful purchase\n            await archClient.getCurrentNAV();\n        } catch (err) {\n            setError(err instanceof Error ? err.message : \"Failed to buy OVT\");\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    }, []);\n    const sellOVT = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (amount)=>{\n        setIsLoading(true);\n        setError(null);\n        try {\n            const result = await archClient.sellOVT(amount, \"mock_wallet_address\");\n            if (!result.success) {\n                throw new Error(result.error || \"Failed to sell OVT\");\n            }\n            // Refresh NAV data after successful sale\n            await archClient.getCurrentNAV();\n        } catch (err) {\n            setError(err instanceof Error ? err.message : \"Failed to sell OVT\");\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    }, []);\n    return {\n        isLoading,\n        error,\n        navData,\n        buyOVT,\n        sellOVT\n    };\n}\n// Helper function to get project descriptions\nfunction getProjectDescription(name) {\n    const descriptions = {\n        \"Polymorphic Labs\": \"Encryption Layer\",\n        \"VoltFi\": \"Bitcoin Volatility Index on Bitcoin\",\n        \"MIXDTape\": \"Phygital Music for superfans - disrupting Streaming\"\n    };\n    return descriptions[name] || \"\";\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useOVTClient.ts\n"));

/***/ }),

/***/ "./src/lib/archClient.ts":
/*!*******************************!*\
  !*** ./src/lib/archClient.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArchClient: function() { return /* binding */ ArchClient; }\n/* harmony export */ });\nclass ArchClient {\n    async verifyBitcoinPayment(txid, expectedAmount) {\n        try {\n            const response = await fetch(\"\".concat(this.endpoint, \"/verify_payment\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    txid,\n                    expected_amount: expectedAmount,\n                    treasury_address: this.treasuryAddress\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to verify payment\");\n            }\n            const result = await response.json();\n            return result.verified;\n        } catch (error) {\n            console.error(\"Payment verification failed:\", error);\n            return false;\n        }\n    }\n    async buyOVT(amount, paymentTxid, walletAddress) {\n        try {\n            // Verify the payment first\n            const isVerified = await this.verifyBitcoinPayment(paymentTxid, amount);\n            if (!isVerified) {\n                throw new Error(\"Payment verification failed\");\n            }\n            // Execute the buyback instruction\n            const response = await fetch(\"\".concat(this.endpoint, \"/buy_ovt\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    program_id: this.programId,\n                    payment_txid: paymentTxid,\n                    amount,\n                    wallet_address: walletAddress\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to execute OVT purchase\");\n            }\n            const result = await response.json();\n            return {\n                success: true,\n                txid: result.txid\n            };\n        } catch (error) {\n            console.error(\"OVT purchase failed:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error occurred\"\n            };\n        }\n    }\n    async sellOVT(amount, walletAddress) {\n        try {\n            const response = await fetch(\"\".concat(this.endpoint, \"/sell_ovt\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    program_id: this.programId,\n                    amount,\n                    wallet_address: walletAddress\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to execute OVT sale\");\n            }\n            const result = await response.json();\n            return {\n                success: true,\n                txid: result.txid\n            };\n        } catch (error) {\n            console.error(\"OVT sale failed:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error occurred\"\n            };\n        }\n    }\n    async getCurrentNAV() {\n        try {\n            const response = await fetch(\"\".concat(this.endpoint, \"/get_nav\"));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch NAV\");\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Failed to fetch NAV:\", error);\n            throw error;\n        }\n    }\n    async getTransactionHistory(walletAddress) {\n        try {\n            const response = await fetch(\"\".concat(this.endpoint, \"/transactions?address=\").concat(walletAddress));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch transaction history\");\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Failed to fetch transaction history:\", error);\n            throw error;\n        }\n    }\n    constructor(config){\n        this.programId = config.programId;\n        this.treasuryAddress = config.treasuryAddress;\n        this.endpoint = config.endpoint;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/archClient.ts\n"));

/***/ })

});